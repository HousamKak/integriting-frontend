// src/styles/components/Button.scss
@import '../variables';

.button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-family: $font-family-sans;
  font-weight: $font-weight-medium;
  border-radius: $border-radius-md;
  cursor: pointer;
  transition: $transition-normal;
  border: 2px solid transparent;
  text-align: center;
  white-space: nowrap;
  position: relative;
  overflow: hidden;
  
  // Add ripple effect for better interaction feedback
  &::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    pointer-events: none;
    background-image: radial-gradient(circle, #fff 10%, transparent 10.01%);
    background-repeat: no-repeat;
    background-position: 50%;
    transform: scale(10, 10);
    opacity: 0;
    transition: transform 0.5s, opacity 0.8s;
  }
  
  &:active::after {
    transform: scale(0, 0);
    opacity: 0.3;
    transition: 0s;
  }
  
  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba($primary-color, 0.3);
  }
  
  &:disabled {
    opacity: 0.65;
    cursor: not-allowed;
    pointer-events: none;
  }
  
  // Variants
  &--primary {
    background-color: $primary-color;
    color: $white;
    
    &:hover, &:focus {
      background-color: darken($primary-color, 10%);
      transform: translateY(-2px); // Subtle elevation on hover
      box-shadow: $shadow-md;
    }
  }
  
  &--secondary {
    background-color: $secondary-color;
    color: $white;
    
    &:hover, &:focus {
      background-color: darken($secondary-color, 10%);
      transform: translateY(-2px);
      box-shadow: $shadow-md;
    }
  }
  
  &--accent {
    background-color: $accent-color;
    color: $primary-color;
    
    &:hover, &:focus {
      background-color: darken($accent-color, 10%);
      transform: translateY(-2px);
      box-shadow: $shadow-md;
    }
  }
  
  &--outline {
    background-color: transparent;
    border-color: $primary-color;
    color: $primary-color;
    
    &:hover, &:focus {
      background-color: rgba($primary-color, 0.1);
      transform: translateY(-2px);
    }
  }
  
  &--text {
    background-color: transparent;
    color: $primary-color;
    border: none;
    padding-left: 0;
    padding-right: 0;
    
    &:hover, &:focus {
      color: darken($primary-color, 10%);
      text-decoration: underline;
    }
    
    &::after {
      display: none; // No ripple effect for text buttons
    }
  }
  
  // Sizes
  &--small {
    padding: $spacing-1 $spacing-3;
    font-size: $font-size-sm;
  }
  
  &--medium {
    padding: $spacing-2 $spacing-4;
    font-size: $font-size-md;
  }
  
  &--large {
    padding: $spacing-3 $spacing-6;
    font-size: $font-size-lg;
  }
  
  // Full width
  &--full-width {
    width: 100%;
    display: block;
  }
  
  // Add icon alignment
  &__icon {
    margin-right: $spacing-2;
    
    &--right {
      margin-right: 0;
      margin-left: $spacing-2;
    }
  }
  
  // Add loading state
  &--loading {
    position: relative;
    color: transparent !important;
    
    &::before {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 1em;
      height: 1em;
      margin-top: -0.5em;
      margin-left: -0.5em;
      border-radius: 50%;
      border: 2px solid currentColor;
      border-right-color: transparent;
      animation: button-loading-spinner 0.75s linear infinite;
    }
  }
  
  @keyframes button-loading-spinner {
    to {
      transform: rotate(360deg);
    }
  }
}